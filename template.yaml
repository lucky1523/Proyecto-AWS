AWSTemplateFormatVersion : '2010-09-09'
Transform:
  - AWS::Serverless-2016-10-31

Description: Election Day
Resources:
  GetVoter:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getVoter
      Environment:
        Variables:
          VOTERS_TABLE: !Ref MyVotersTable
      Handler: infoElection.getVoter
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MyVotersTable
      Events:
        GetVoter:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/voter/{voter_id}"
            Method: GET

  PutVoter:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putVoter
      Environment:
        Variables:
          VOTERS_TABLE: !Ref MyVotersTable
      Handler: infoElection.putVoter
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MyVotersTable
      Events:
        PutVoter:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/voter/{voter_id}"
            Method: PUT
  
  GetAbsentee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: getAbsentee
      Environment:
        Variables:
          VOTERS_TABLE: !Ref MyVotersTable
      Handler: infoElection.getAbsentee
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref MyVotersTable
      Events:
        GetAbsentee:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/absentee/{absentee_id}"
            Method: GET
 
  PutAbsentee:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: putAbsentee
      Environment:
        Variables:
          VOTERS_TABLE: !Ref MyVotersTable
      Handler: infoElection.putAbsentee
      Runtime: python3.6
      CodeUri: package/
      Policies:
        - DynamoDBWritePolicy:
            TableName: !Ref MyVotersTable
      Events:
        PutAbsentee:
          Type: Api
          Properties:
            RestApiId: !Ref MyAPI
            Path: "/absentee/{absentee_id}"
            Method: PUT
            
  S3Bucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      AccessControl: PublicRead
      BucketName: elections-day-123
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      CorsConfiguration:
        CorsRules:
          -
            AllowedOrigins:
              - '*'
            AllowedHeaders:
              - '*'
            AllowedMethods:
              - GET
              - PUT
              - POST
              - DELETE
              - HEAD
  
  PublicBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3Bucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - 's3:GetObject'
            Resource:
            - !Join ['/', [!GetAtt [S3Bucket, Arn], '*']]
            Principal: '*'
          
          
  MyAPI:
    Type: AWS::Serverless::Api
    Properties:
      Name: my-voters-api
      StageName: prod
      DefinitionBody:
        Fn::Transform:
          Name: AWS::Include
          Parameters:
            Location: swagger.yaml

  MyVotersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: my-voters-table-app
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
        - AttributeName: sk
          KeyType: RANGE
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
        - AttributeName: sk
          AttributeType: S